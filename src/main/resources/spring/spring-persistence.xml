<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

	<!-- Datasource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<!-- c3p0 pooling -->
		<property name="minPoolSize" value="${hibernate.c3p0.min_size}" />
		<property name="maxPoolSize" value="${hibernate.c3p0.max_size}" />
		<property name="maxStatements" value="${hibernate.c3p0.max_statements}" />
		<!-- Use to refresh connection -->
		<!-- Value has to be inferior to the database timeout -->
		<property name="idleConnectionTestPeriod" value="${hibernate.c3p0.idle_test_period}" />
	</bean>
	
	<!-- ################ JNDI LOOKUP ################ -->
	<!-- Way 1) JNDI Datasource lookup -->
<!-- 	<jee:jndi-lookup id="dbDataSource" jndi-name="jdbc/DatabaseName" expected-type="javax.sql.DataSource" /> -->

	<!-- Way 2) JNDI Datasource lookup -->
<!-- 	<bean id="dbDataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> -->
<!-- 	    <property name="jndiName" value="java:comp/env/jdbc/DatabaseName"/> -->
<!-- 	</bean> -->

	<!-- JPA Entity Manager -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- With this, no need to declare persistence.xml -->
		<property name="packagesToScan" value="com.jeetemplates.app.domain" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.dialect" value="${hibernate.dialect}" />
				<entry key="hibernate.show_sql" value="${hibernate.show_sql}" />
				<entry key="hibernate.format_sql" value="${hibernate.format_sql}" />
				<entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}" />
				<entry key="hibernate.temp.use_jdbc_metadata_defaults" value="${hibernate.temp.use_jdbc_metadata_defaults}" />
			</map>
		</property>
	</bean>

	<!-- Transaction manager JPA -->
	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager" />


</beans>
